version: '3.7'

services:
  traefik:
    container_name: 'traefik'
    image: 'traefik:v2.2'
    restart: always
    command:
      - --api.dashboard=true
      - --api.debug=false
      - --api.insecure=false
      - --certificatesresolvers.mytlschallenge.acme.email=${EMAIL}
      - --certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.mytlschallenge.acme.tlschallenge=true
      - --entrypoints.web.address=:${WEB_PORT}
      - --entrypoints.websecure.address=:${WEBSECURE_PORT}
      - --log.level=ERROR # DEBUG, PANIC, FATAL, ERROR, WARN, INFO
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=web
      - --providers.docker=true
      - --providers.file.filename=/dynamic.yaml
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    volumes:
      - './letsencrypt:/letsencrypt'
      - './dynamic.yaml:/dynamic.yaml'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    networks:
      - web
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`status.${HOST}`)'
      - 'traefik.http.routers.api.service=api@internal'
      - 'traefik.http.routers.api.tls.certresolver=mytlschallenge'
      - 'traefik.http.routers.api.tls=true'

  whoami:
    container_name: 'simple-service'
    image: 'containous/whoami'
    restart: always
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.whoami.entrypoints=web'
      - 'traefik.http.routers.whoami.middlewares=redirect@file'
      - 'traefik.http.routers.whoami.rule=(Host(`${HOST}`) || Host(`www.${HOST}`))'
      - 'traefik.http.routers.whoamisecure.entrypoints=websecure'
      - 'traefik.http.routers.whoamisecure.rule=(Host(`${HOST}`) || Host(`www.${HOST}`))'
      - 'traefik.http.routers.whoamisecure.tls.certresolver=mytlschallenge'
      - 'traefik.http.routers.whoamisecure.tls=true'
    networks:
      - web

  miniflux:
    container_name: 'miniflux'
    image: 'miniflux/miniflux'
    depends_on:
      - pg
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pg/miniflux?sslmode=disable
      - POLLING_FREQUENCY=10
      - RUN_MIGRATIONS=${MINIFLUX_INIT}
      - CREATE_ADMIN=${MINIFLUX_INIT}
      - ADMIN_USERNAME=${MINIFLUX_ADMIN}
      - ADMIN_PASSWORD=${MINIFLUX_ADMIN_PASSWORD}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.miniflux.entrypoints=websecure'
      - 'traefik.http.routers.miniflux.middlewares=redirect@file'
      - 'traefik.http.routers.miniflux.rule=Host(`rss.${HOST}`)'
      - 'traefik.http.routers.miniflux.tls.certresolver=mytlschallenge'
      - 'traefik.http.routers.miniflux.tls=true'
    networks:
      - web
      - backend

  pg:
    container_name: 'postrgres'
    image: 'postgres:12'
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - 'pg_data:/var/lib/postgresql/data'
      # - './data/postgres/:/var/lib/postgresql/data'
    networks:
      - backend

volumes:
  pg_data:

networks:
  web:
    external: true
  backend:
    external: false
